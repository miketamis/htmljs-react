(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{180:function(e,n,t){e.exports=t(453)},185:function(e,n,t){},192:function(e,n,t){},453:function(e,n,t){"use strict";t.r(n);var o=t(1),a=t.n(o),r=t(30),l=t.n(r),c=(t(185),t(76)),i=t(168),s=t(169),u=t(170),d=t(178),p=t(171),m=t(179),f=t(109),v=t.n(f),h=t(57),g=(t(187),t(188),t(189),t(177)),C=(t(190),t(192),t(194),t(172)),x=t.n(C);var y=function(e){return e=e.replace(/(-.)/g,function(e){return e[1].toUpperCase()})},b=function(e){return"@media "+e},w=function(e){return e=(e=(e=(e=e.replace(/\s\s+/g," ")).replace(/[^a-zA-Z0-9]/g,"_")).replace(/^_+/g,"")).replace(/_+$/g,"")};function S(e){if(!e)throw new Error("missing css text to transform");var n=!1;-1===e.indexOf("{")&&(n=!0,e=".bootstrapWithCssClass { ".concat(e," }"));var t={};return function e(n,t,o){t.forEach(function(t){var a={};if("media"===t.type){var r=b(t.media),l=o[r]=o[r]||{__expression__:t.media};e(n,t.rules,l)}else"rule"===t.type&&(t.declarations.forEach(function(e){if("declaration"===e.type){var n=y(e.property);a[n]=e.value}}),t.selectors.forEach(function(e){var n=w(e.trim());o[n]=a}))})}(this,x.a.parse(e).stylesheet.rules,t),n&&(t=t.bootstrapWithCssClass),t}t(116);var T=t(229);function E(e){return e.charAt(0).toUpperCase()+e.slice(1)}var k=function(e,n,o){var a=E(function(e){return e.substr(e.lastIndexOf("/")+1).split(".")[0]}(e)),r=[],l="const ".concat(a," = ({ props } : Props) => { \n");o&&(l="const ".concat(a," = ({ props }) => { \n"));var c=!0,i={collect:!1,value:""},s={collect:!1,value:""},u={collect:!1,value:""},d=[],p={collect:!1,value:""},m={collect:!1,value:""};function f(e){m.collect?m.value+=e:l+=e}var v=t(116).createParser({onText:function(e){var n=e.value;if(i.collect)return i.value+=n,void(i.collect=!1);for(var t=[i,s,u,p],o=0;o<t.length;o++)if(t[o].collect)return t[o].value+=n,void(t[o].collect=!1);f(n)},onPlaceholder:function(e){var n=e.value;e.escaped,e.withinBody,e.withinAttribute,e.withinString,e.withinOpenTag,e.pos,f("{ ".concat(n," }"))},onCDATA:function(e){e.value,e.pos},onOpenTag:function(e){var n=e.tagName,t=e.attributes,o=e.argument;if(e.pos,o){var a=n,r=t.find(function(e){return":"===e.name[0]}),l=r&&r.name.replace(":","");return d.push(n),void f("\n            <".concat(a," args={[").concat(o.value,"]} render={((").concat(l||"",") => (<React.Fragment>\n           "))}if("imports"===n)return v.enterParsedTextContentState(),void(i.collect=!0);if("import"!==n){if("props"===n)return v.enterParsedTextContentState(),void(s.collect=!0);if("example"===n)return v.enterParsedTextContentState(),u.collect=!0,void(u.event=e);var h={for:"htmlFor",class:"className"};if("static"===n)return v.enterParsedTextContentState(),p.collect=!0,void(p.value+=e.attributes&&e.attributes.map(function(e){return e.name}).join(" "));if(c&&(c=!1,f("return (<React.Fragment>")),"@"===n[0])return m.collect=!0,void f("const "+n.replace("@","")+" = ({"+t.map(function(e){return e.name.replace(":","")}).join(",")+"}) => (<React.Fragment>");f("<".concat(n," ").concat(t.map(function(e){var n=h[e.name]||e.name;if("style"===(n=n.split("-").map(function(e,n){return 0===n?e:E(e)}).join(""))&&'"'===e.value[0])return"".concat(n,"={").concat(JSON.stringify(S(e.literalValue)),"}");if(e.value&&"class"===n){var t=e.value;return"["===t[0]&&(t+=".filter((a) => a).join(' ')"),"{"===t[0]&&(t="Object.entries("+t+").filter((a) => a[1]).map(a => a[0]).join(' ')"),"className={".concat(t,"}")}return n?"".concat(n,"={ ").concat(e.value||JSON.stringify(e.argument)," } "):"{...".concat(e.value,"}")}).join(" "),">"))}else i.value+="import "+e.attributes.map(function(e){return e.name}).join(" ")},onCloseTag:function(e){var n=e.tagName;if(e.pos,"imports"!==n&&"props"!==n&&"static"!==n){if("@"===n[0])return f("</React.Fragment >)\n"),void(m.collect=!1);if("example"!==n)d.includes(n)?f("</ React.Fragment>))} />"):f("</".concat(n,">"));else{var t={};u.event.attributes.forEach(function(e){var n=e.name,o=e.value;try{t[n]=T.parse(o)}catch(a){f("ERRERE")}});try{t.content=T.parse("{".concat(u.value,"}")),u.value="",r.push(t)}catch(o){f("error!")}}}},onDocumentType:function(e){e.value,e.pos},onDeclaration:function(e){e.value,e.pos},onComment:function(e){e.value,e.pos},onScriptlet:function(e){var n=e.value;e.pos,f(n)},onError:function(e){e.message,e.code,e.pos,console.log("error",e)}});v.parse(n);var h=s.value,g=s.value.split(",").map(function(e){return e.split(":")[0]}).join(",");return f("</ React.Fragment>) \n }"),l="\n".concat(o?"":"//@flow","\n").concat(o?"":i.value||"import React from 'react';","\n").concat(o?"":"\ntype Props = {\n    ".concat(h,"\n}\n"),"\n").concat(p.value,"\n").concat(l.replace("props",g),"\n").concat(m.value,"\n").concat(o?"\nReactDOM.render(<".concat(a," {...componentState}/>, mountNode);\n"):"\nexport default ".concat(a,";\n"),"\n\n"),{examples:r,output:l,props:s.value}},$=(t(230),'\n<props>\n    title: string,\n    content: string\n</props>\n\n<example name="with title of Hello">\n  title: "Hello"\n</example>\n\n<example name="with content of Hello">\n  title: "My content is Hello",\n  content: "Hello"\n</example>\n\n\n<div>\n    <h1>Title: {title}</h1>\n    <p>Content: {content}</p>\n</div>\n'),O=function(e){function n(){var e,t;Object(s.a)(this,n);for(var o=arguments.length,a=new Array(o),r=0;r<o;r++)a[r]=arguments[r];return(t=Object(d.a)(this,(e=Object(p.a)(n)).call.apply(e,[this].concat(a)))).state={code:$,componentState:{},exampleState:{},output:k("awesomeo.ma",$,!1),exampleIndex:0,hideJSX:!0},t.valueChange=function(e,n){var o=k("awesomeo.ma",e,!1);t.setState({code:e,output:o});var a=0===n||n?n:t.state.exampleIndex;o.examples[a]&&((0===n||n||JSON.stringify(t.state.exampleState)!==JSON.stringify(o.examples[a].content))&&t.setState({componentState:o.examples[a].content}),t.setState({exampleState:o.examples[a].content}))},t}return Object(m.a)(n,e),Object(u.a)(n,[{key:"componentDidMount",value:function(){this.valueChange(this.state.code)}},{key:"render",value:function(){var e=this,n=this.state.hideJSX,t=this.state.output;return a.a.createElement("div",null,a.a.createElement("button",{className:"myButton",onClick:function(){return e.setState(function(e){return{hideJSX:!e.hideJSX}})}},"HideJSX"),a.a.createElement("button",{className:"myButton",onClick:function(){return e.valueChange($)}},"Card.htmlx"),a.a.createElement("button",{className:"myButton",onClick:function(){return e.valueChange('\n$ const ENTER_KEY = 13;\n\n$ const [todos, setTodos] = useState([{ done: true, name: \'A todo\' }, { done: false, name: \'Bob\' }])\n$ const [currentFilter, setCurrentFilter] = useState(\'All\')\n\n$ const allCompleted = !todos.find(({ done }) => !done)\n\n\n$ const filtered = {\n    All: todos,\n    Active: todos.filter(({ done }) => !done),\n    Completed: todos.filter(({ done }) => done),\n};\n\n$ const filters = Object.keys(filtered);\n\n$ const [newTodo, setNewTodo] = useState(\'\');\n\n\n$ const updateTodo = (index, update) => {\n      setTodos(todos.map((todo, i) => {\n      if(i === index) {\n        return {\n        ...todo,\n        ...update,\n        }\n      }\n      return todo;\n    }))\n};\n\n$ function toggleTodo(index) {\n  return () => {\n    updateTodo(index,{ done: !todos[index].done })\n  }\n}\n\n$ function completeAllToggle() {\n  setTodos(todos.map((todo) => ({ ...todo, done: !allCompleted }))\n  )\n}\n\n$ function deleteTodo(index)  {\n  return () => {\n    setTodos(todos.filter((todo, i) => i !== index))\n  }\n}\n\n$ function clearCompleted() {\n  setTodos(todos.filter((todo) => !todo.done))\n}\n\n\n$ function handleNewTodoKeyDown(event) {\n  if (event.keyCode !== ENTER_KEY) {\n    return;\n  } \n\n  event.preventDefault();\n\n  var val = newTodo.trim();\n\n  if (val) {\n     setTodos([...todos, {\n       done: false,\n       name: val,\n     }]);\n     setNewTodo(\'\');\n  }\n}\n\n\n<@Map :args :render>\n { args[0].map(value => render(value)) }\n</@Map>\n\n<@MapWithIndex :args :render>\n { args[0].map((value, index) => render({ ...value, index })) }\n</@MapWithIndex>\n\n<@If :args :render>\n { !!args[0] && render() }\n</@If>\n\n\n\n\n<section class="todoapp">\n\t<header class="header">\n\t\t<h1>todos</h1>\n        <input \n            class="new-todo" \n            placeholder="What needs to be done?" \n            autofocus=""\n            value=newTodo\n\t\t\tonKeyDown=handleNewTodoKeyDown\n\t\t\tonChange=(({ target }) => setNewTodo(target.value))\n         />\n\t</header>\n\t<section class="main" style="display: block;">\n        <input class="toggle-all" onChange=completeAllToggle checked=allCompleted id="toggle-all" type="checkbox">\n        <label for="toggle-all">Mark all as complete</label>\n        <ul class="todo-list">\n            <MapWithIndex(filtered[currentFilter]) :todo>\n                <li class=todo.done&&\'completed\'>\n                    <div class="view">\n                        <input class="toggle" onChange=toggleTodo(todo.index) checked=todo.done type="checkbox">\n                        <label>${todo.name}</label>\n                        <button onClick=deleteTodo(todo.index) class="destroy"></button>\n                    </div>\n                    <input class="edit" value="A todo">\n                </li>\n            </MapWithIndex>\n        </ul>\n    </section>\n    <footer class="footer" style="display: block;">\n        <span class="todo-count"><strong>${filtered.Active.length}</strong> items left</span>\n        <ul class="filters">\n            <Map(filters) :filter>\n                <li>\n                    <a class=(filter === currentFilter && "selected") href="#" onClick=(() => setCurrentFilter(filter))>{filter}</a>\n                </li>\n            </Map>  \n        </ul>\n        <If(filtered.Completed.length)>\n            <button class="clear-completed" onClick=clearCompleted>Clear completed</button>\n        </If>\n    </footer>\n</section>\n\n')}},"TodoMVC.htmlx"),a.a.createElement("button",{className:"myButton",onClick:function(){return e.valueChange('\n\n\n\n<props>\n    world: string,\n    intialCount: number\n</props>\n\n<example name="Hello World">\n  world: "world",\n  intialCount: "10",\n</example>\n$ const [ count, setCounter ] = React.useState(intialCount)\n\n$ const increment = () => setCounter(count + 1)\n$ const decrement = () => setCounter(count - 1)\n$ const groups = [{ name: \'Test\', numbers: [14, 18] }, { name: \'Other\', numbers: [20,30]}];\n\n\n\n<@Map :args :render>\n { args[0].map(value => render(value)) }\n</@Map>\n<@If :args :render>\n { !!args[0] && render() }\n</@If>\n\n\n<div>\nHello ${world}\nWow this is really crazy ${ count }\n<div>\n  its just html\n</div>\n\n<Map(groups) :group>\n  ${ group.name }\n  <Map(group.numbers) :number>\n    <button class="myButton"  onClick=(() => setCounter(number))>{number}</button>\n  </Map> \n</Map>\n\n<If(count == 10)>\n  <div>its 10</div>\n</If>\n\n<If(count > 14)>\n  <div>Wow its over 14</div>\n</If>\n\n\n\n<button class="myButton" onClick=increment>increment</button>\n<button class="myButton"  onClick=decrement>decrement</button>\n</div>\n\n\n')}},"Test.htmlx"),a.a.createElement("div",{style:{display:"flex"}},a.a.createElement("div",{style:{width:n?"50%":"30%"}},a.a.createElement(v.a,{value:this.state.code,onValueChange:this.valueChange,highlight:function(e){return Object(h.highlight)(e,h.languages.markup)},padding:10,style:{fontFamily:'"Fira code", "Fira Mono", monospace',fontSize:12,height:"100vh"}})),!n&&a.a.createElement("div",{style:{width:n?"50%":"30%"}},a.a.createElement(v.a,{value:t.output,onValueChange:function(e){},highlight:function(e){return Object(h.highlight)(e,h.languages.js)},padding:10,style:{fontFamily:'"Fira code", "Fira Mono", monospace',fontSize:12,height:"100vh"}})),a.a.createElement("div",{style:{width:n?"50%":"30%"}},a.a.createElement(g.a,{key:JSON.stringify(this.state.componentState),codeText:k("awesomeo.ma",this.state.code,!0).output,noRender:!1,scope:{useState:o.useState,componentState:this.state.componentState,React:a.a,ReactDOM:l.a,Button:function(e){return a.a.createElement("div",e)}}}),a.a.createElement("div",{style:{margin:200}}),a.a.createElement("h1",null,"Props:"),t.props.split(",").map(function(n){var t=n.split(":")[0].replace(/\s/g,"");return a.a.createElement("div",null,n,a.a.createElement("input",{value:e.state.componentState[t]||"",onChange:function(n){var o=n.target;return e.setState({componentState:Object(i.a)({},e.state.componentState,Object(c.a)({},t,o.value))})}}))}),this.state.output.examples.map(function(n,t){return a.a.createElement("button",{className:"myButton",onClick:function(){e.setState({exampleIndex:t}),e.valueChange(e.state.code,t)}},e.state.exampleIndex===t&&"current: ",n.name)}))))}}]),n}(a.a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(a.a.createElement(O,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[180,2,1]]]);
//# sourceMappingURL=main.82ff9518.chunk.js.map